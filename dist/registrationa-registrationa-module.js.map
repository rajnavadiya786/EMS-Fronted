{"version":3,"sources":["./src/app/registrationa/registrationa-routing.module.ts","./src/app/registrationa/registrationa.component.ts","./src/app/registrationa/registrationa.component.html","./src/app/registrationa/registrationa.module.ts"],"names":[],"mappings":"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","file":"registrationa-registrationa-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport {RegistrationaComponent} from './registrationa.component'\nconst routes: Routes = [\n  {\n    path: '',\n       component: RegistrationaComponent,\n      data: {\n        title: 'adminregister'\n            },\n  }\n  \n  ];\n  @NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n  })\nexport class RegistrationaRoutingModule { }\nexport const routedComponents = [RegistrationaComponent];","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {  FormControl ,FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-registrationa',\n  templateUrl: './registrationa.component.html',\n  styleUrls: ['./registrationa.component.scss']\n})\nexport class RegistrationaComponent implements OnInit {\n\n  constructor() { }\n  adminform : FormGroup = new FormGroup({\n    aname:new FormControl('',Validators.required),\n    Gender:new FormControl('',Validators.required),\n    dob:new FormControl('',Validators.required),\n    phno:new FormControl('',Validators.required),\n    email:new FormControl('',[Validators.required,Validators.email]),\n    password:new FormControl('',[Validators.required,Validators.minLength(6),Validators.maxLength(8)]),\n\n})\npublic hasError = (controlName: string, errorName: string) =>{\n  return this.adminform.controls[controlName].hasError(errorName);\n}\nonSubmit()\n{\n  console.log(this.adminform.value);\n}\n\nngOnInit(){} \n}","<div class=\"row text-left\">\n  <div class=\"col-sm-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h4 class=\"card-title\">Admin Registration</h4>\n      </div>\n      <div class=\"card-content\">\n        <div class=\"card-body\">\n          <form [formGroup]=\"adminform\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Admin Name</mat-label>\n                <input type=\"text\"   id=\"aname\" formControlName=\"aname\" matInput placeholder=\"Admin Name\">\n                <mat-error *ngIf=\"hasError('aname', 'required')\">Name is required</mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Choose a date</mat-label>\n                <input  matInput formControlName=\"dob\" [matDatepicker]=\"picker\" (focus)=\"picker.open()\"\n                  (click)=\"picker.open()\">\n                  <mat-error *ngIf=\"hasError('dob', 'required')\">Date is required</mat-error>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\">\n                  <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\n                </mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Ph.No</mat-label>\n                <input type=\"number\" id=\"phno\" formControlName=\"phno\" matInput placeholder=\"Mobile Number\">\n                <mat-error *ngIf=\"hasError('phno', 'required')\">Ph.No is required</mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>E-mail</mat-label>\n                <input type=\"email\" id=\"email\" formControlName=\"email\" matInput placeholder=\"Email ID\">\n                <mat-error *ngIf=\"hasError('email', 'required')\">Email is required</mat-error>\n                <mat-error *ngIf=\"hasError('email', 'email')\">Enter a Valid Email Address</mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"form-group\">              \n              <mat-form-field appearance=\"outline\">\n                <mat-label>Password</mat-label>\n                <input type=\"password\" id=\"password\" formControlName=\"password\" matInput placeholder=\"Password\">\n                <mat-error *ngIf=\"hasError('password', 'required')\">Password is required</mat-error>\n                <mat-error *ngIf=\"hasError('password', 'minlength')\">Password must be at least 6 characters</mat-error>\n                <mat-error *ngIf=\"hasError('password', 'maxlength')\">Enter a password between 6-8</mat-error>\n                \n              </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n              <mat-label class=\"id1\">Gender</mat-label>\n              <mat-radio-group formControlName=\"Gender\" aria-label=\"Select an option\">\n                <mat-radio-button color=\"warn\" checked value=\"Male\">Male</mat-radio-button>\n                <mat-radio-button color=\"warn\" value=\"Female\">Female</mat-radio-button>\n              </mat-radio-group>\n            </div>\n            <div class=\"form-group\">\n              <button mat-raised-button color=\"warn\" type=\"submit\">Register</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MaterialModule} from '../material/material.module';\nimport { RegistrationaRoutingModule } from './registrationa-routing.module'\nimport {RegistrationaComponent} from 'app/registrationa/registrationa.component'\n\n@NgModule({\n  declarations: [RegistrationaComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RegistrationaRoutingModule,\n  ]\n})\nexport class RegistrationaModule { }\n"],"sourceRoot":"webpack:///"}